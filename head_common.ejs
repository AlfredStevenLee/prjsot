
<title>SOT Online Market!!!</title>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
<!--[if lte IE 8]><script src="js/ie/html5shiv.js"></script><![endif]-->
<link rel="stylesheet" href="css/main.css" />
<!--[if lte IE 9]><link rel="stylesheet" href="css/ie9.css" /><![endif]-->
<!--[if lte IE 8]><link rel="stylesheet" href="css/ie8.css" /><![endif]-->

<!-- Scripts -->
<script src="js/jquery.min.js"></script>
<script src="js/skel.min.js"></script>
<script src="js/util.js"></script>
<!--[if lte IE 8]><script src="js/ie/respond.min.js"></script><![endif]-->
<script src="js/main.js"></script>

<!-- jquery UI import -->
<link rel="stylesheet" href="jquery-ui-1.12.1/jquery-ui.min.css">
<script src="jquery-ui-1.12.1/jquery-ui.min.js"></script>

<!--jQuery form validator 사용 : http://www.formvalidator.net-->
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery-form-validator/2.3.26/jquery.form-validator.min.js"></script>
<script type="javascript" src="https://github.com/ethereum/web3.js/tree/develop/dist/web3.min.js"></script>

<script>
var bizsite = '<%-decodeURIComponent(res.get("biz"))%>';

function pageUrl(url_address) {
  window.location.href = url_address+"?biz="+bizsite;
}
function pageUrlAddParam(url_address) {
  window.location.href = url_address+"&biz="+bizsite;
}

var contractAddress = '0x96973bb06df09f065f343237d54eb7aab3aa112a';

var abi =   [ { "constant": false, "inputs": [ { "name": "contract_no", "type": "uint32" }, { "name": "prod_id", "type": "uint32" }, { "name": "seller_account", "type": "address" }, { "name": "prod_price_sot", "type": "uint32" } ], "name": "addProductContract", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "val", "type": "uint256" } ], "name": "approve", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "kill", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "from", "type": "address" }, { "name": "to", "type": "address" }, { "name": "val", "type": "uint256" } ], "name": "sendToken", "outputs": [ { "name": "success", "type": "bool" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "to", "type": "address" }, { "name": "val", "type": "uint256" } ], "name": "sendTokenDirect", "outputs": [ { "name": "success", "type": "bool" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "contract_no", "type": "uint32" } ], "name": "setApproveByBuyer", "outputs": [ { "name": "", "type": "bool" }, { "name": "", "type": "bytes10" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "contract_no", "type": "uint32" } ], "name": "setCancelContract", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "constant": true, "inputs": [ { "name": "cust", "type": "address" } ], "name": "balanceSot", "outputs": [ { "name": "val", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "contract_no", "type": "uint32" } ], "name": "getProductContract", "outputs": [ { "name": "", "type": "uint32" }, { "name": "", "type": "address" }, { "name": "", "type": "address" }, { "name": "", "type": "uint256" }, { "name": "", "type": "bytes5" }, { "name": "", "type": "bool" }, { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" } ];

function checkRestData(data) {
  if(data == "SERVER_EXCEPTION") {
    alert("서버 과부하로 일시 점검중입니다. 잠시후 다시 시도 부탁드립니다.");
    return true;
  } else {
    return false;
  }
}

function submit_logout() {
  var addr = "/action_logout_member";

  $.post(addr,
  function(data, status){
    if(status == "success"){
      if (data == "LOGOUT_SUCCESS")
      {
        //alert("Logout success!");
        window.location.replace("/sotmain?biz="+bizsite);
      }
      else
      {
        //Anything need to do when login failed
      }
    } else {
      alert("There's some problem . Please try it in seconds.");
    }
  });
}

function checkBrowser() {

  if (typeof web3 !== 'undefined') {
    // Use Mist/MetaMask's provider
    window.web3 = new Web3(web3.currentProvider);
  } else {
    alert('No web3? You should consider trying MetaMask!');
    // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)
    window.web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
    return false;
  }
}


function checkWeb3(callbackFunc, param, web3_msg_box) {

	//web3 브라우저 여부 체크
	if (typeof web3 !== 'undefined') {
		// Use Mist/MetaMask's provider
		window.web3 = new Web3(web3.currentProvider);
	} else {
    if(web3_msg_box != null) {
      $("#"+web3_msg_box).html("Metamask, Cipher등 이더리움 지갑을 먼저 설치해 주세요.");
    }
		//alert('No web3? You should consider trying MetaMask!');
		// fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)
		window.web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
		return false;
	}

	//metamsk 로그인 여부 체크
	var myAccount = web3.eth.accounts[0];
	if (typeof myAccount == 'undefined') {
    if(web3_msg_box != null) {
      $("#"+web3_msg_box).html("Metamask, Cipher등 이더리움 지갑을 열고 먼저 로그인해 주세요!");
    }
		return false;
	}

  var netId = web3.version.network;
  var nwstat = false;

  switch (netId) {
    case "1":
      //	alert('This is mainnet')
      break
    case "2":
      //alert('This is the deprecated Morden test network.')
      break
    case "3":
      //alert('This is the ropsten test network.')
      nwstat = true;
      break
    case "4":
      //alert('This is the Rinkeby test network.')
      break
    case "42":
      //alert('This is the Kovan test network.')
      break
    default:
      //alert('This is an unknown network.')
  }

  if(!nwstat) {
    if(web3_msg_box != null) {
      $("#"+web3_msg_box).html("서비스 이용을 위해서 이더리움 MainNet을 선택해 주세요.");
    }
    return false;
  } else {
    if(web3_msg_box != null) {
      $("#"+web3_msg_box).html("");
    }

    if (callbackFunc != null) {
      if (typeof callbackFunc == "function") {
        if (param == null) {
          callbackFunc();
          return true;
        } else {
          callbackFunc(param);
          return true;
        }
      }
    } else {
      return true;
    }
  }

}

function getCustBalance(containerID) {
  var userAccount = web3.eth.accounts[0];
  var contractSot = web3.eth.contract(abi);
  var productManager = contractSot.at(contractAddress);

  productManager.balanceSot.call(userAccount,function(e,r){
    txid = r;
    $("#"+containerID).val(r.toNumber()/10**18);
  });
}


function pagingController(_parent, _post) {
  var pageNum = 1;
  var processing = false;
  _win = $(window);

  _win.scroll(function() {
    //$("#sizetest").html("DH : "+$(document).height()+" / WH : "+_win.height()+"<br>ST: "+Math.round(_win.scrollTop())+" = D-W : "+ ($(document).height() - _win.height()) );
    if ( ($(document).height() - _win.height() <= Math.round(_win.scrollTop()+250)) && (!processing)) {
      pageNum++;
      processing = true;

      $.post(_post,
      {
        pageNum:pageNum
      },
      function(data, status){
        if(status == "success"){
          if(checkRestData(data)) {
            return false;
          }

          if (data == "NO_DATA") {
            return false;
          }
          _parent.append(data);
          processing = false;
        } else {
          alert("There's some problem . Please try it in seconds.");
        }
      });
    }
  });
}


</script>
